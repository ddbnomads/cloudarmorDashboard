## replace [projectID] value in json with your project id ##

{
  "displayName": "Cloud Armor WAF Dashboard",
  "mosaicLayout": {
    "columns": 48,
    "tiles": [
      {
        "yPos": 119,
        "width": 48,
        "height": 27,
        "widget": {
          "title": "Last 50 requests through Cloud Armor",
          "timeSeriesTable": {
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "opsAnalyticsQuery": {
                    "queryBuilder": {
                      "fields": [],
                      "filter": {
                        "expressions": [],
                        "operatorType": "AND"
                      },
                      "limit": "0",
                      "orderBys": [],
                      "resourceNames": [],
                      "searchTerm": ""
                    },
                    "queryHandle": "CgipFw831NHn-BIgam9iXzZFN2pxejJaMlRHbTJLODFtc05IcjVPZm45QkEaAlVTQLqYlpiMCQ",
                    "sql": "SELECT\n  timestamp,\n  http_request.request_method,\n  http_request.status,\n  http_request.request_url,\n  --http_request.request_size,\n  --http_request.response_size,\n  http_request.user_agent,\n  http_request.remote_ip,\n  -- http_request.server_ip,\n  http_request.referer,\n  JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) AS regionCode,\n  JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.asn) AS asn,\n  JSON_VALUE(json_payload.securityPolicyRequestData.tlsJa3Fingerprint) AS Ja3Fingerprint,\n  JSON_VALUE(json_payload.enforcedSecurityPolicy.matchedFieldLength) AS fieldLength,\n  JSON_VALUE(json_payload.enforcedSecurityPolicy.matchedFieldType) AS fieldType,\n  JSON_VALUE(json_payload.enforcedSecurityPolicy.matchedFieldValue) AS fieldValue,\n  JSON_VALUE(json_payload.enforcedSecurityPolicy.name) AS Security_Policy,\n  JSON_VALUE(json_payload.enforcedSecurityPolicy.priority) AS Rule_Priority,\n  JSON_VALUE(json_payload.enforcedSecurityPolicy.configuredAction) AS Rule_Action,\n  JSON_VALUE(json_payload.enforcedSecurityPolicy.preconfiguredExprIds.0) AS preconfiguredExprIds,\n  JSON_VALUE(json_payload.previewSecurityPolicy.name) AS Preview_Security_Policy,\n  JSON_VALUE(json_payload.previewSecurityPolicy.priority) AS Preview_Rule_Priority,\n  JSON_VALUE(json_payload.previewSecurityPolicy.configuredAction) AS Preview_Rule_Action,\n  --json_payload.previewSecurityPolicy\nFROM\n  `[projectID].global._Default._AllLogs`\nWHERE\n  resource.type = 'http_load_balancer' --and severity = 'WARNING'\n  AND (json_payload.enforcedSecurityPolicy.name IS NOT NULL\n    OR json_payload.previewSecurityPolicy.name IS NOT NULL)\n  AND\nIF\n  ( ARRAY_LENGTH(@Security_Policy) = 0, TRUE, JSON_VALUE(json_payload.enforcedSecurityPolicy.name) IN UNNEST(@Security_Policy) )\n  AND\nIF\n  ( ARRAY_LENGTH(@Backend_name) = 0, TRUE, JSON_VALUE(resource.labels.backend_service_name) IN UNNEST(@Backend_name) )\n  AND\nIF\n  ( ARRAY_LENGTH(@Region_Code) = 0, TRUE, JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) IN UNNEST(@Region_Code) )\nORDER BY\n  timestamp DESC\nLIMIT\n  50"
                  }
                }
              }
            ],
            "displayColumnType": false,
            "metricVisualization": "NUMBER",
            "opsAnalyticsSettings": {
              "maxRows": "0",
              "pageSize": "0",
              "showFilterBar": false
            }
          }
        }
      },
      {
        "yPos": 52,
        "width": 33,
        "height": 10,
        "widget": {
          "xyChart": {
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "opsAnalyticsQuery": {
                    "savedQueryId": "",
                    "sql": "SELECT\n  count(timestamp) as requests, \n  \n  http_request.referer,\n \nFROM\n  `[projectID].global._Default._AllLogs`\nWHERE\n  resource.type = 'http_load_balancer' \n  and\n  IF(\n    ARRAY_LENGTH(@Security_Policy) = 0,\n    TRUE,\n   json_value(json_payload.enforcedSecurityPolicy.name) IN UNNEST(@Security_Policy)\n  )\n  and \n\n  IF(\n    ARRAY_LENGTH(@Backend_name) = 0,\n    TRUE,\n    json_value(resource.labels.backend_service_name) IN UNNEST(@Backend_name)\n  )\nand\n  IF(\n    ARRAY_LENGTH(@Region_Code) = 0,\n    TRUE,\n    JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) IN UNNEST(@Region_Code)\n  )\n\nGROUP BY\n  2,\n  timestamp\nORDER BY\n  timestamp DESC\n  --LIMIT 100",
                    "queryHandle": ""
                  },
                  "unitOverride": "",
                  "outputFullDuration": false
                },
                "plotType": "STACKED_BAR",
                "legendTemplate": "",
                "targetAxis": "Y1",
                "dimensions": [
                  {
                    "column": "referer",
                    "columnType": "STRING",
                    "maxBinCount": 5,
                    "sortOrder": "SORT_ORDER_ASCENDING",
                    "sortColumn": "referer"
                  }
                ],
                "measures": [
                  {
                    "column": "requests",
                    "aggregationFunction": {
                      "type": "count",
                      "parameters": []
                    }
                  }
                ],
                "breakdowns": []
              }
            ],
            "thresholds": [],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            },
            "chartOptions": {
              "mode": "COLOR",
              "showLegend": false,
              "displayHorizontal": true
            }
          },
          "title": "Top Referer",
          "id": ""
        }
      },
      {
        "yPos": 42,
        "width": 47,
        "height": 10,
        "widget": {
          "xyChart": {
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "opsAnalyticsQuery": {
                    "savedQueryId": "",
                    "sql": "SELECT\n  count(timestamp) as Requests, \n\n  http_request.request_url, \n\nFROM\n  `[projectID].global._Default._AllLogs`\nWHERE\n  resource.type = 'http_load_balancer' \n  and\n  IF(\n    ARRAY_LENGTH(@Security_Policy) = 0,\n    TRUE,\n   json_value(json_payload.enforcedSecurityPolicy.name) IN UNNEST(@Security_Policy)\n  )\n  and \n\n  IF(\n    ARRAY_LENGTH(@Backend_name) = 0,\n    TRUE,\n    json_value(resource.labels.backend_service_name) IN UNNEST(@Backend_name)\n  )\nand\n  IF(\n    ARRAY_LENGTH(@Region_Code) = 0,\n    TRUE,\n    JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) IN UNNEST(@Region_Code)\n  )\n\nGROUP BY\n  2,\n  timestamp\nORDER BY\n  timestamp DESC\n  --LIMIT 100",
                    "queryHandle": ""
                  },
                  "unitOverride": "",
                  "outputFullDuration": false
                },
                "plotType": "STACKED_BAR",
                "legendTemplate": "",
                "targetAxis": "Y1",
                "dimensions": [
                  {
                    "column": "request_url",
                    "columnType": "STRING",
                    "maxBinCount": 5,
                    "sortOrder": "SORT_ORDER_ASCENDING",
                    "sortColumn": "request_url"
                  }
                ],
                "measures": [
                  {
                    "column": "Requests",
                    "aggregationFunction": {
                      "type": "count",
                      "parameters": []
                    }
                  }
                ],
                "breakdowns": []
              }
            ],
            "thresholds": [],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            },
            "chartOptions": {
              "mode": "COLOR",
              "showLegend": false,
              "displayHorizontal": true
            }
          },
          "title": "Top URLs",
          "id": ""
        }
      },
      {
        "xPos": 33,
        "yPos": 52,
        "width": 14,
        "height": 10,
        "widget": {
          "xyChart": {
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "opsAnalyticsQuery": {
                    "savedQueryId": "",
                    "sql": "SELECT\n  count(timestamp) as requests, \n  http_request.request_method, \n \nFROM\n  `[projectID].global._Default._AllLogs`\nWHERE\n  resource.type = 'http_load_balancer' \n  and\n  IF(\n    ARRAY_LENGTH(@Security_Policy) = 0,\n    TRUE,\n   json_value(json_payload.enforcedSecurityPolicy.name) IN UNNEST(@Security_Policy)\n  )\n  and \n\n  IF(\n    ARRAY_LENGTH(@Backend_name) = 0,\n    TRUE,\n    json_value(resource.labels.backend_service_name) IN UNNEST(@Backend_name)\n  )\nand\n  IF(\n    ARRAY_LENGTH(@Region_Code) = 0,\n    TRUE,\n    JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) IN UNNEST(@Region_Code)\n  )\n\nGROUP BY\n  2,\n  timestamp\nORDER BY\n  timestamp DESC\n  --LIMIT 100",
                    "queryHandle": ""
                  },
                  "unitOverride": "",
                  "outputFullDuration": false
                },
                "plotType": "STACKED_BAR",
                "legendTemplate": "",
                "targetAxis": "Y1",
                "dimensions": [
                  {
                    "column": "request_method",
                    "columnType": "STRING",
                    "maxBinCount": 5,
                    "sortOrder": "SORT_ORDER_ASCENDING",
                    "sortColumn": "request_method"
                  }
                ],
                "measures": [
                  {
                    "column": "requests",
                    "aggregationFunction": {
                      "type": "count",
                      "parameters": []
                    }
                  }
                ],
                "breakdowns": []
              }
            ],
            "thresholds": [],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            },
            "chartOptions": {
              "mode": "COLOR",
              "showLegend": false,
              "displayHorizontal": true
            }
          },
          "title": "Method",
          "id": ""
        }
      },
      {
        "yPos": 62,
        "width": 47,
        "height": 10,
        "widget": {
          "xyChart": {
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "opsAnalyticsQuery": {
                    "savedQueryId": "",
                    "sql": "SELECT\n  count(timestamp) as requests, \n\n  http_request.user_agent,\n \nFROM\n  `[projectID].global._Default._AllLogs`\nWHERE\n  resource.type = 'http_load_balancer' \n  and\n  IF(\n    ARRAY_LENGTH(@Security_Policy) = 0,\n    TRUE,\n   json_value(json_payload.enforcedSecurityPolicy.name) IN UNNEST(@Security_Policy)\n  )\n  and \n\n  IF(\n    ARRAY_LENGTH(@Backend_name) = 0,\n    TRUE,\n    json_value(resource.labels.backend_service_name) IN UNNEST(@Backend_name)\n  )\nand\n  IF(\n    ARRAY_LENGTH(@Region_Code) = 0,\n    TRUE,\n    JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) IN UNNEST(@Region_Code)\n  )\n\nGROUP BY\n  2,\n  timestamp\nORDER BY\n  timestamp DESC\n  --LIMIT 100",
                    "queryHandle": ""
                  },
                  "unitOverride": "",
                  "outputFullDuration": false
                },
                "plotType": "STACKED_BAR",
                "legendTemplate": "",
                "targetAxis": "Y1",
                "dimensions": [
                  {
                    "column": "user_agent",
                    "columnType": "STRING",
                    "maxBinCount": 5,
                    "sortOrder": "SORT_ORDER_ASCENDING",
                    "sortColumn": "user_agent"
                  }
                ],
                "measures": [
                  {
                    "column": "requests",
                    "aggregationFunction": {
                      "type": "count",
                      "parameters": []
                    }
                  }
                ],
                "breakdowns": []
              }
            ],
            "thresholds": [],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            },
            "chartOptions": {
              "mode": "COLOR",
              "showLegend": false,
              "displayHorizontal": true
            }
          },
          "title": "Top User Agents",
          "id": ""
        }
      },
      {
        "yPos": 13,
        "width": 25,
        "height": 16,
        "widget": {
          "timeSeriesTable": {
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "timeSeriesFilter": {
                    "filter": "metric.type=\"loadbalancing.googleapis.com/https/request_count\" resource.type=\"https_lb_rule\" ${Backend_name}",
                    "aggregation": {
                      "alignmentPeriod": "3600s",
                      "perSeriesAligner": "ALIGN_SUM",
                      "crossSeriesReducer": "REDUCE_SUM",
                      "groupByFields": [
                        "metric.label.\"client_country\""
                      ]
                    },
                    "pickTimeSeriesFilter": {
                      "rankingMethod": "METHOD_MEAN",
                      "numTimeSeries": 100,
                      "direction": "TOP"
                    }
                  },
                  "unitOverride": "",
                  "outputFullDuration": false
                },
                "tableTemplate": "",
                "minAlignmentPeriod": "3600s"
              }
            ],
            "metricVisualization": "BAR",
            "opsAnalyticsSettings": {
              "maxRows": "0",
              "showFilterBar": false,
              "pageSize": "0"
            },
            "displayColumnType": false
          },
          "title": "Requests by Country (1h mean)",
          "id": ""
        }
      },
      {
        "yPos": 29,
        "width": 25,
        "height": 13,
        "widget": {
          "xyChart": {
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "opsAnalyticsQuery": {
                    "savedQueryId": "",
                    "sql": "SELECT\n  COUNT(timestamp) AS Requests,\n\n  http_request.remote_ip,\n\nFROM\n  `[projectID].global._Default._AllLogs`\nWHERE\n  resource.type = 'http_load_balancer' \n  and\n  IF(\n    ARRAY_LENGTH(@Security_Policy) = 0,\n    TRUE,\n   json_value(json_payload.enforcedSecurityPolicy.name) IN UNNEST(@Security_Policy)\n  )\n  and \n\n  IF(\n    ARRAY_LENGTH(@Backend_name) = 0,\n    TRUE,\n    json_value(resource.labels.backend_service_name) IN UNNEST(@Backend_name)\n  )\nand\n  IF(\n    ARRAY_LENGTH(@Region_Code) = 0,\n    TRUE,\n    JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) IN UNNEST(@Region_Code)\n  )\n\nGROUP BY\n  2,\n  timestamp\nORDER BY\n  timestamp DESC\n  --LIMIT 100",
                    "queryHandle": ""
                  },
                  "unitOverride": "",
                  "outputFullDuration": false
                },
                "plotType": "STACKED_BAR",
                "legendTemplate": "",
                "targetAxis": "Y1",
                "dimensions": [
                  {
                    "column": "remote_ip",
                    "columnType": "STRING",
                    "maxBinCount": 5,
                    "sortOrder": "SORT_ORDER_ASCENDING",
                    "sortColumn": "remote_ip"
                  }
                ],
                "measures": [
                  {
                    "column": "Requests",
                    "aggregationFunction": {
                      "type": "count",
                      "parameters": []
                    }
                  }
                ],
                "breakdowns": []
              }
            ],
            "thresholds": [],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            },
            "chartOptions": {
              "mode": "COLOR",
              "showLegend": false,
              "displayHorizontal": true
            }
          },
          "title": "Top Client IPs",
          "id": ""
        }
      },
      {
        "xPos": 25,
        "yPos": 13,
        "width": 23,
        "height": 16,
        "widget": {
          "xyChart": {
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "timeSeriesFilter": {
                    "filter": "metric.type=\"loadbalancing.googleapis.com/https/response_bytes_count\" resource.type=\"https_lb_rule\" ${Backend_name}",
                    "aggregation": {
                      "alignmentPeriod": "3600s",
                      "perSeriesAligner": "ALIGN_SUM",
                      "crossSeriesReducer": "REDUCE_SUM",
                      "groupByFields": [
                        "metric.label.\"client_country\""
                      ]
                    }
                  },
                  "unitOverride": "",
                  "outputFullDuration": false
                },
                "plotType": "STACKED_AREA",
                "legendTemplate": "",
                "minAlignmentPeriod": "3600s",
                "targetAxis": "Y1",
                "dimensions": [],
                "measures": [],
                "breakdowns": []
              }
            ],
            "thresholds": [],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            },
            "chartOptions": {
              "mode": "COLOR",
              "showLegend": false,
              "displayHorizontal": false
            }
          },
          "title": "Traffic by Country by Hour",
          "id": ""
        }
      },
      {
        "xPos": 25,
        "yPos": 29,
        "width": 22,
        "height": 13,
        "widget": {
          "xyChart": {
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "timeSeriesFilter": {
                    "filter": "metric.type=\"loadbalancing.googleapis.com/https/request_count\" resource.type=\"https_lb_rule\" ${Backend_name}",
                    "aggregation": {
                      "alignmentPeriod": "60s",
                      "perSeriesAligner": "ALIGN_RATE",
                      "crossSeriesReducer": "REDUCE_SUM",
                      "groupByFields": [
                        "metric.label.\"response_code_class\""
                      ]
                    }
                  },
                  "unitOverride": "",
                  "outputFullDuration": false
                },
                "plotType": "STACKED_AREA",
                "legendTemplate": "",
                "minAlignmentPeriod": "60s",
                "targetAxis": "Y1",
                "dimensions": [],
                "measures": [],
                "breakdowns": []
              }
            ],
            "thresholds": [],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            },
            "chartOptions": {
              "mode": "COLOR",
              "showLegend": false,
              "displayHorizontal": false
            }
          },
          "title": "Status Codes",
          "id": ""
        }
      },
      {
        "yPos": 100,
        "width": 48,
        "height": 19,
        "widget": {
          "title": "Top Rules Hits (by rule priority)",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": true,
              "mode": "COLOR"
            },
            "dataSets": [
              {
                "breakdowns": [
                  {
                    "aggregationFunction": {
                      "type": "count"
                    },
                    "column": "Security_Policy",
                    "limit": 10,
                    "sortOrder": "SORT_ORDER_DESCENDING"
                  }
                ],
                "dimensions": [
                  {
                    "column": "Rule_Priority",
                    "columnType": "STRING",
                    "maxBinCount": 10,
                    "sortColumn": "Rule_Priority",
                    "sortOrder": "SORT_ORDER_ASCENDING"
                  }
                ],
                "measures": [
                  {
                    "aggregationFunction": {
                      "parameters": [],
                      "type": "count"
                    },
                    "column": "Requests"
                  }
                ],
                "plotType": "STACKED_BAR",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "opsAnalyticsQuery": {
                    "queryBuilder": {
                      "fields": [],
                      "filter": {
                        "expressions": [],
                        "operatorType": "AND"
                      },
                      "limit": "0",
                      "orderBys": [],
                      "resourceNames": [],
                      "searchTerm": ""
                    },
                    "queryHandle": "",
                    "sql": "SELECT\n  count(timestamp) as Requests, \n  json_value(json_payload.enforcedSecurityPolicy.name) as Security_Policy,\n  json_value(json_payload.enforcedSecurityPolicy.priority) as Rule_Priority,\n  json_value(json_payload.enforcedSecurityPolicy.configuredAction) as Rule_Action,\n  --json_payload.previewSecurityPolicy\n  \n\nFROM\n  `[projectID].global._Default._AllLogs`\nWHERE\n  resource.type = 'http_load_balancer' \n  and\n  IF(\n    ARRAY_LENGTH(@Security_Policy) = 0,\n    TRUE,\n   json_value(json_payload.enforcedSecurityPolicy.name) IN UNNEST(@Security_Policy)\n  )\n  and \n\n  IF(\n    ARRAY_LENGTH(@Backend_name) = 0,\n    TRUE,\n    json_value(resource.labels.backend_service_name) IN UNNEST(@Backend_name)\n  )\nand\n  IF(\n    ARRAY_LENGTH(@Region_Code) = 0,\n    TRUE,\n    JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) IN UNNEST(@Region_Code)\n  )\n\nGROUP BY\n  2,3,4, timestamp\nORDER BY\n  timestamp DESC\n  --LIMIT 100"
                  }
                }
              }
            ],
            "thresholds": [],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "xPos": 24,
        "yPos": 72,
        "width": 24,
        "height": 15,
        "widget": {
          "xyChart": {
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "timeSeriesFilter": {
                    "filter": "metric.type=\"networksecurity.googleapis.com/https/request_count\" resource.type=\"network_security_policy\" metric.label.\"blocked\"=\"true\" ${Security_Policy}",
                    "aggregation": {
                      "alignmentPeriod": "60s",
                      "perSeriesAligner": "ALIGN_RATE",
                      "crossSeriesReducer": "REDUCE_SUM",
                      "groupByFields": [
                        "resource.label.\"policy_name\""
                      ]
                    }
                  },
                  "unitOverride": "",
                  "outputFullDuration": false
                },
                "plotType": "LINE",
                "legendTemplate": "DENY - ${resource.labels.policy_name}",
                "minAlignmentPeriod": "60s",
                "targetAxis": "Y1",
                "dimensions": [],
                "measures": [],
                "breakdowns": []
              },
              {
                "timeSeriesQuery": {
                  "timeSeriesFilter": {
                    "filter": "metric.type=\"networksecurity.googleapis.com/https/previewed_request_count\" resource.type=\"network_security_policy\" metric.label.\"blocked\"=\"true\" ${Security_Policy}",
                    "aggregation": {
                      "alignmentPeriod": "60s",
                      "perSeriesAligner": "ALIGN_RATE",
                      "crossSeriesReducer": "REDUCE_SUM",
                      "groupByFields": [
                        "resource.label.\"policy_name\""
                      ]
                    }
                  },
                  "unitOverride": "",
                  "outputFullDuration": false
                },
                "plotType": "LINE",
                "legendTemplate": "PREVIEW DENY - ${resource.labels.policy_name}",
                "minAlignmentPeriod": "60s",
                "targetAxis": "Y1",
                "dimensions": [],
                "measures": [],
                "breakdowns": []
              }
            ],
            "timeshiftDuration": "604800s",
            "thresholds": [],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            },
            "chartOptions": {
              "mode": "COLOR",
              "showLegend": false,
              "displayHorizontal": false
            }
          },
          "title": "Blocked Requests per Policy",
          "id": ""
        }
      },
      {
        "yPos": 72,
        "width": 24,
        "height": 15,
        "widget": {
          "xyChart": {
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "timeSeriesFilter": {
                    "filter": "metric.type=\"networksecurity.googleapis.com/https/request_count\" resource.type=\"network_security_policy\" metric.label.\"blocked\"=\"false\" ${Security_Policy}",
                    "aggregation": {
                      "alignmentPeriod": "60s",
                      "perSeriesAligner": "ALIGN_RATE",
                      "crossSeriesReducer": "REDUCE_SUM",
                      "groupByFields": [
                        "resource.label.\"policy_name\""
                      ]
                    }
                  },
                  "unitOverride": "",
                  "outputFullDuration": false
                },
                "plotType": "LINE",
                "legendTemplate": "ALLOW - ${resource.labels.policy_name}",
                "minAlignmentPeriod": "60s",
                "targetAxis": "Y1",
                "dimensions": [],
                "measures": [],
                "breakdowns": []
              }
            ],
            "thresholds": [],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            },
            "chartOptions": {
              "mode": "COLOR",
              "showLegend": false,
              "displayHorizontal": false
            }
          },
          "title": "Allowed Requests per Policy",
          "id": ""
        }
      },
      {
        "xPos": 1,
        "width": 12,
        "height": 13,
        "widget": {
          "xyChart": {
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "opsAnalyticsQuery": {
                    "savedQueryId": "",
                    "sql": "SELECT\n  count(timestamp) as Requests , \n -- timestamp,\n  json_value(json_payload.enforcedSecurityPolicy.configuredAction) as Rule_Action,\n    json_value(json_payload.enforcedSecurityPolicy.name) as Security_Policy,\n  --json_payload.previewSecurityPolicy\n  \nFROM\n  `[projectID].global._Default._AllLogs`\n  where resource.type = 'http_load_balancer' --and severity = 'WARNING'\n  and  json_value(json_payload.enforcedSecurityPolicy.configuredAction) is not NULL\nand\n  IF(\n    ARRAY_LENGTH(@Security_Policy) = 0,\n    TRUE,\n   json_value(json_payload.enforcedSecurityPolicy.name) IN UNNEST(@Security_Policy)\n  )\n  and \n\n  IF(\n    ARRAY_LENGTH(@Backend_name) = 0,\n    TRUE,\n    json_value(resource.labels.backend_service_name) IN UNNEST(@Backend_name)\n    --SPLIT(json_value(resource.labels.backend_service_name), \"-backend\")[0]  IN UNNEST(@Backend_name)\n  )\n  and\n  IF(\n    ARRAY_LENGTH(@Region_Code) = 0,\n    TRUE,\n    JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) IN UNNEST(@Region_Code)\n  )\n\n\n  group by 2 ,3\norder by Rule_Action desc\n--LIMIT 100",
                    "queryHandle": "",
                    "queryBuilder": {
                      "resourceNames": [],
                      "filter": {
                        "operatorType": "AND",
                        "expressions": []
                      },
                      "fields": [],
                      "limit": "0",
                      "orderBys": [],
                      "searchTerm": ""
                    }
                  },
                  "unitOverride": "",
                  "outputFullDuration": false
                },
                "plotType": "STACKED_BAR",
                "legendTemplate": "",
                "targetAxis": "Y1",
                "dimensions": [
                  {
                    "column": "Rule_Action",
                    "columnType": "STRING",
                    "maxBinCount": 5,
                    "sortOrder": "SORT_ORDER_ASCENDING",
                    "sortColumn": "Rule_Action"
                  }
                ],
                "measures": [
                  {
                    "column": "Requests",
                    "aggregationFunction": {
                      "type": "average",
                      "parameters": []
                    }
                  }
                ],
                "breakdowns": []
              }
            ],
            "thresholds": [],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            },
            "chartOptions": {
              "mode": "COLOR",
              "showLegend": false,
              "displayHorizontal": true
            }
          },
          "title": "Requests - High Level",
          "id": ""
        }
      },
      {
        "xPos": 13,
        "width": 34,
        "height": 13,
        "widget": {
          "xyChart": {
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "opsAnalyticsQuery": {
                    "savedQueryId": "",
                    "sql": "\n  SELECT\n  (timestamp), \n count(timestamp) as requests,\n  json_value(json_payload.enforcedSecurityPolicy.configuredAction) as Rule_Action,\n    json_value(json_payload.enforcedSecurityPolicy.name) as Security_Policy\n  \nFROM\n  `[projectID].global._Default._AllLogs`\n  where resource.type = 'http_load_balancer' --and severity = 'WARNING'\n  and  json_value(json_payload.enforcedSecurityPolicy.configuredAction) is not null\n  and\n  IF(\n    ARRAY_LENGTH(@Security_Policy) = 0,\n    TRUE,\n   json_value(json_payload.enforcedSecurityPolicy.name) IN UNNEST(@Security_Policy)\n  )\n  and \n\n  IF(\n    ARRAY_LENGTH(@Backend_name) = 0,\n    TRUE,\n    json_value(resource.labels.backend_service_name) IN UNNEST(@Backend_name)\n  )\n  and\n  IF(\n    ARRAY_LENGTH(@Region_Code) = 0,\n    TRUE,\n    JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) IN UNNEST(@Region_Code)\n  )\n\n  group by 1,4,3\n",
                    "queryHandle": ""
                  },
                  "unitOverride": "",
                  "outputFullDuration": false
                },
                "plotType": "LINE",
                "legendTemplate": "",
                "targetAxis": "Y1",
                "dimensions": [
                  {
                    "column": "timestamp",
                    "columnType": "TIMESTAMP",
                    "timeBinSize": "0s",
                    "maxBinCount": 0,
                    "sortOrder": "SORT_ORDER_ASCENDING",
                    "sortColumn": "timestamp"
                  }
                ],
                "measures": [
                  {
                    "column": "requests",
                    "aggregationFunction": {
                      "type": "count",
                      "parameters": []
                    }
                  }
                ],
                "breakdowns": [
                  {
                    "column": "Rule_Action",
                    "limit": 5,
                    "aggregationFunction": {
                      "type": "count",
                      "parameters": []
                    },
                    "sortOrder": "SORT_ORDER_DESCENDING"
                  }
                ]
              }
            ],
            "thresholds": [],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            },
            "chartOptions": {
              "mode": "COLOR",
              "showLegend": false,
              "displayHorizontal": false
            }
          },
          "title": "Requests - High Level",
          "id": ""
        }
      },
      {
        "width": 48,
        "height": 13,
        "widget": {
          "title": "1. Cloud Armor - At a Glance",
          "collapsibleGroup": {
            "collapsed": false
          },
          "id": ""
        }
      },
      {
        "yPos": 87,
        "width": 27,
        "height": 13,
        "widget": {
          "xyChart": {
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "opsAnalyticsQuery": {
                    "savedQueryId": "",
                    "sql": "SELECT\n  count(timestamp) as Requests, \n  timestamp,\n  json_value(json_payload.enforcedSecurityPolicy.name) as Security_Policy,\n  json_value(json_payload.enforcedSecurityPolicy.priority) as Rule_Priority,\n  json_value(json_payload.enforcedSecurityPolicy.preconfiguredExprIds.0) as preconfiguredExprIds,\n\n  \nFROM\n  `[projectID].global._Default._AllLogs`\n  where resource.type = 'http_load_balancer'\n  and json_value(json_payload.enforcedSecurityPolicy.preconfiguredExprIds.0) is not null\n  and\n  IF(\n    ARRAY_LENGTH(@Security_Policy) = 0,\n    TRUE,\n   json_value(json_payload.enforcedSecurityPolicy.name) IN UNNEST(@Security_Policy)\n  )\n  and \n\n  IF(\n    ARRAY_LENGTH(@Backend_name) = 0,\n    TRUE,\n    json_value(resource.labels.backend_service_name) IN UNNEST(@Backend_name)\n  )\n  and\n  \n\n  IF(\n    ARRAY_LENGTH(@Region_Code) = 0,\n    TRUE,\n    json_value(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) IN UNNEST(@Region_Code)\n  )\ngroup by 5,3,4, timestamp\norder by timestamp desc\n--LIMIT 100",
                    "queryHandle": ""
                  },
                  "unitOverride": "",
                  "outputFullDuration": false
                },
                "plotType": "LINE",
                "legendTemplate": "",
                "targetAxis": "Y1",
                "dimensions": [
                  {
                    "column": "timestamp",
                    "columnType": "TIMESTAMP",
                    "timeBinSize": "0s",
                    "maxBinCount": 0,
                    "sortOrder": "SORT_ORDER_ASCENDING",
                    "sortColumn": "timestamp"
                  }
                ],
                "measures": [
                  {
                    "column": "Requests",
                    "aggregationFunction": {
                      "type": "count",
                      "parameters": []
                    }
                  }
                ],
                "breakdowns": [
                  {
                    "column": "preconfiguredExprIds",
                    "limit": 5,
                    "aggregationFunction": {
                      "type": "count",
                      "parameters": []
                    },
                    "sortOrder": "SORT_ORDER_DESCENDING"
                  }
                ]
              }
            ],
            "thresholds": [],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            },
            "chartOptions": {
              "mode": "COLOR",
              "showLegend": false,
              "displayHorizontal": false
            }
          },
          "title": "WAF Pre-configured Rule Hits ",
          "id": ""
        }
      },
      {
        "xPos": 27,
        "yPos": 87,
        "width": 20,
        "height": 13,
        "widget": {
          "xyChart": {
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "opsAnalyticsQuery": {
                    "savedQueryId": "",
                    "sql": "SELECT\n  count(timestamp) as Requests, \n\n  json_value(json_payload.enforcedSecurityPolicy.name) as Security_Policy,\n  json_value(json_payload.enforcedSecurityPolicy.priority) as Rule_Priority,\n  json_value(json_payload.enforcedSecurityPolicy.preconfiguredExprIds.0) as preconfiguredExprIds,\n\n  \nFROM\n  `[projectID].global._Default._AllLogs`\n  where resource.type = 'http_load_balancer'\n  and json_value(json_payload.enforcedSecurityPolicy.preconfiguredExprIds.0) is not null\n  and\n  IF(\n    ARRAY_LENGTH(@Security_Policy) = 0,\n    TRUE,\n   json_value(json_payload.enforcedSecurityPolicy.name) IN UNNEST(@Security_Policy)\n  )\n  and \n\n  IF(\n    ARRAY_LENGTH(@Backend_name) = 0,\n    TRUE,\n    json_value(resource.labels.backend_service_name) IN UNNEST(@Backend_name)\n  )\n  and\n  \n\n  IF(\n    ARRAY_LENGTH(@Region_Code) = 0,\n    TRUE,\n    json_value(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) IN UNNEST(@Region_Code)\n  )\ngroup by 2,3,4, timestamp\norder by timestamp desc\n--LIMIT 100",
                    "queryHandle": ""
                  },
                  "unitOverride": "",
                  "outputFullDuration": false
                },
                "plotType": "STACKED_BAR",
                "legendTemplate": "",
                "targetAxis": "Y1",
                "dimensions": [
                  {
                    "column": "preconfiguredExprIds",
                    "columnType": "STRING",
                    "maxBinCount": 5,
                    "sortOrder": "SORT_ORDER_ASCENDING",
                    "sortColumn": "preconfiguredExprIds"
                  }
                ],
                "measures": [
                  {
                    "column": "Requests",
                    "aggregationFunction": {
                      "type": "count",
                      "parameters": []
                    }
                  }
                ],
                "breakdowns": [
                  {
                    "column": "Security_Policy",
                    "limit": 5,
                    "aggregationFunction": {
                      "type": "count",
                      "parameters": []
                    },
                    "sortOrder": "SORT_ORDER_DESCENDING"
                  }
                ]
              }
            ],
            "thresholds": [],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            },
            "chartOptions": {
              "mode": "COLOR",
              "showLegend": false,
              "displayHorizontal": true
            }
          },
          "title": "WAF Pre-configured Rule Hits ",
          "id": ""
        }
      },
      {
        "yPos": 13,
        "width": 48,
        "height": 59,
        "widget": {
          "title": "2. Ingress Patterns",
          "collapsibleGroup": {
            "collapsed": false
          },
          "id": ""
        }
      },
      {
        "yPos": 72,
        "width": 48,
        "height": 74,
        "widget": {
          "title": "3. Cloud Armor Policies",
          "collapsibleGroup": {
            "collapsed": false
          },
          "id": ""
        }
      }
    ]
  },
  "dashboardFilters": [
    {
      "labelKey": "policy_name",
      "templateVariable": "Security_Policy",
      "filterType": "RESOURCE_LABEL",
      "valueType": "STRING_ARRAY"
    },
    {
      "labelKey": "backend_target_name",
      "templateVariable": "Backend_name",
      "filterType": "RESOURCE_LABEL",
      "valueType": "STRING_ARRAY"
    },
    {
      "labelKey": "",
      "templateVariable": "Region_Code",
      "filterType": "VALUE_ONLY",
      "valueType": "STRING_ARRAY",
      "stringArray": {
        "values": [
          "AD",
          "AE",
          "AF",
          "AG",
          "AI",
          "AL",
          "AM",
          "AO",
          "AQ",
          "AR",
          "AS",
          "AT",
          "AU",
          "AW",
          "AX",
          "AZ",
          "BA",
          "BB",
          "BD",
          "BE",
          "BF",
          "BG",
          "BH",
          "BI",
          "BJ",
          "BL",
          "BM",
          "BN",
          "BO",
          "BQ",
          "BR",
          "BS",
          "BT",
          "BV",
          "BW",
          "BY",
          "BZ",
          "CA",
          "CC",
          "CD",
          "CF",
          "CG",
          "CH",
          "CI",
          "CK",
          "CL",
          "CM",
          "CN",
          "CO",
          "CR",
          "CU",
          "CV",
          "CW",
          "CX",
          "CY",
          "CZ",
          "DE",
          "DJ",
          "DK",
          "DM",
          "DO",
          "DZ",
          "EC",
          "EE",
          "EG",
          "EH",
          "ER",
          "ES",
          "ET",
          "FI",
          "FJ",
          "FK",
          "FM",
          "FO",
          "FR",
          "GA",
          "GB",
          "GD",
          "GE",
          "GF",
          "GG",
          "GH",
          "GI",
          "GL",
          "GM",
          "GN",
          "GP",
          "GQ",
          "GR",
          "GS",
          "GT",
          "GU",
          "GW",
          "GY",
          "HK",
          "HM",
          "HN",
          "HR",
          "HT",
          "HU",
          "ID",
          "IE",
          "IL",
          "IM",
          "IN",
          "IO",
          "IQ",
          "IR",
          "IS",
          "IT",
          "JE",
          "JM",
          "JO",
          "JP",
          "KE",
          "KG",
          "KH",
          "KI",
          "KM",
          "KN",
          "KP",
          "KR",
          "KW",
          "KY",
          "KZ",
          "LA",
          "LB",
          "LC",
          "LI",
          "LK",
          "LR",
          "LS",
          "LT",
          "LU",
          "LV",
          "LY",
          "MA",
          "MC",
          "MD",
          "ME",
          "MF",
          "MG",
          "MH",
          "MK",
          "ML",
          "MM",
          "MN",
          "MO",
          "MP",
          "MQ",
          "MR",
          "MS",
          "MT",
          "MU",
          "MV",
          "MW",
          "MX",
          "MY",
          "MZ",
          "NA",
          "NC",
          "NE",
          "NF",
          "NG",
          "NI",
          "NL",
          "NO",
          "NP",
          "NR",
          "NU",
          "NZ",
          "OM",
          "PA",
          "PE",
          "PF",
          "PG",
          "PH",
          "PK",
          "PL",
          "PM",
          "PN",
          "PR",
          "PS",
          "PT",
          "PW",
          "PY",
          "QA",
          "RE",
          "RO",
          "RS",
          "RU",
          "RW",
          "SA",
          "SB",
          "SC",
          "SD",
          "SE",
          "SG",
          "SH",
          "SI",
          "SJ",
          "SK",
          "SL",
          "SM",
          "SN",
          "SO",
          "SR",
          "SS",
          "ST",
          "SV",
          "SX",
          "SY",
          "SZ",
          "TC",
          "TD",
          "TF",
          "TG",
          "TH",
          "TJ",
          "TK",
          "TL",
          "TM",
          "TN",
          "TO",
          "TR",
          "TT",
          "TV",
          "TW",
          "TZ",
          "UA",
          "UG",
          "UM",
          "US",
          "UY",
          "UZ",
          "VA",
          "VC",
          "VE",
          "VG",
          "VI",
          "VN",
          "VU",
          "WF",
          "WS",
          "YE",
          "YT",
          "ZA",
          "ZM",
          "ZW"
        ]
      }
    }
  ],
  "labels": {}
}
