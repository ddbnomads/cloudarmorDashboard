{
  "displayName": "Cloud Armor WAF Dashboard",
  "dashboardFilters": [
    {
      "filterType": "RESOURCE_LABEL",
      "labelKey": "policy_name",
      "templateVariable": "Security_Policy",
      "valueType": "STRING_ARRAY"
    },
    {
      "filterType": "RESOURCE_LABEL",
      "labelKey": "backend_target_name",
      "templateVariable": "Backend_name",
      "valueType": "STRING_ARRAY"
    },
    {
      "filterType": "VALUE_ONLY",
      "templateVariable": "Region_Code",
      "timeSeriesQuery": {
        "opsAnalyticsQuery": {
          "queryExecutionRules": {
            "useReservedSlots": false
          },
          "sql": "SELECT\n  json_payload.securityPolicyRequestData.remoteIpInfo.regionCode AS Country\nFROM\n  `[projectID].global._Default._AllLogs`\nWHERE\n  resource.type = \"http_load_balancer\"\n  AND json_payload.securityPolicyRequestData.remoteIpInfo.regionCode IS NOT NULL"
        }
      },
      "valueType": "STRING_ARRAY"
    }
  ],
  "labels": {},
  "mosaicLayout": {
    "columns": 48,
    "tiles": [
      {
        "height": 29,
        "width": 48,
        "widget": {
          "title": "1. Cloud Armor - At a Glance",
          "collapsibleGroup": {
            "collapsed": false
          },
          "id": ""
        }
      },
      {
        "xPos": 1,
        "height": 13,
        "width": 12,
        "widget": {
          "title": "Cloud Armor Effectiveness - Total Requests",
          "id": "",
          "pieChart": {
            "chartType": "DONUT",
            "dataSets": [
              {
                "breakdowns": [],
                "dimensions": [
                  {
                    "column": "Rule_Action",
                    "columnType": "STRING",
                    "maxBinCount": 5,
                    "sortColumn": "Rule_Action",
                    "sortOrder": "SORT_ORDER_ASCENDING",
                    "xMax": 0,
                    "xMin": 0
                  }
                ],
                "measures": [
                  {
                    "aggregationFunction": {
                      "parameters": [],
                      "type": "average"
                    },
                    "column": "Requests"
                  }
                ],
                "sliceNameTemplate": "",
                "timeSeriesQuery": {
                  "opsAnalyticsQuery": {
                    "queryHandle": "",
                    "savedQueryId": "",
                    "sql": "SELECT\n  count(timestamp) as Requests , \n -- timestamp,\n  json_value(json_payload.enforcedSecurityPolicy.configuredAction) as Rule_Action,\n    json_value(json_payload.enforcedSecurityPolicy.name) as Security_Policy,\n  --json_payload.previewSecurityPolicy\n  \nFROM\n  `[projectID].global._Default._AllLogs`\n  where resource.type = 'http_load_balancer' --and severity = 'WARNING'\n  and  json_value(json_payload.enforcedSecurityPolicy.configuredAction) is not NULL\nand\n  IF(\n    ARRAY_LENGTH(@Security_Policy) = 0,\n    TRUE,\n   json_value(json_payload.enforcedSecurityPolicy.name) IN UNNEST(@Security_Policy)\n  )\n  and \n\n  IF(\n    ARRAY_LENGTH(@Backend_name) = 0,\n    TRUE,\n    json_value(resource.labels.backend_service_name) IN UNNEST(@Backend_name)\n    --SPLIT(json_value(resource.labels.backend_service_name), \"-backend\")[0]  IN UNNEST(@Backend_name)\n  )\n  and\n  IF(\n    ARRAY_LENGTH(@Region_Code) = 0,\n    TRUE,\n    JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) IN UNNEST(@Region_Code)\n  )\n\n\n  group by 2 ,3\norder by Rule_Action desc\n--LIMIT 100"
                  },
                  "outputFullDuration": false,
                  "unitOverride": ""
                }
              }
            ],
            "showLabels": false,
            "showTotal": false,
            "sliceAggregatedThreshold": 0
          }
        }
      },
      {
        "xPos": 14,
        "height": 13,
        "width": 34,
        "widget": {
          "title": "Requests - High Level",
          "id": "",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": false,
              "mode": "COLOR",
              "showLegend": false
            },
            "dataSets": [
              {
                "breakdowns": [
                  {
                    "aggregationFunction": {
                      "parameters": [],
                      "type": "count"
                    },
                    "column": "Rule_Action",
                    "limit": 5,
                    "sortOrder": "SORT_ORDER_DESCENDING"
                  }
                ],
                "dimensions": [
                  {
                    "column": "timestamp",
                    "columnType": "TIMESTAMP",
                    "maxBinCount": 0,
                    "sortColumn": "timestamp",
                    "sortOrder": "SORT_ORDER_ASCENDING",
                    "timeBinSize": "0s",
                    "xMax": 0,
                    "xMin": 0
                  }
                ],
                "legendTemplate": "",
                "measures": [
                  {
                    "aggregationFunction": {
                      "parameters": [],
                      "type": "count"
                    },
                    "column": "requests"
                  }
                ],
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "opsAnalyticsQuery": {
                    "queryHandle": "",
                    "savedQueryId": "",
                    "sql": "\n  SELECT\n  (timestamp), \n count(timestamp) as requests,\n  json_value(json_payload.enforcedSecurityPolicy.configuredAction) as Rule_Action,\n    json_value(json_payload.enforcedSecurityPolicy.name) as Security_Policy\n  \nFROM\n  `[projectID].global._Default._AllLogs`\n  where resource.type = 'http_load_balancer' --and severity = 'WARNING'\n  and  json_value(json_payload.enforcedSecurityPolicy.configuredAction) is not null\n  and\n  IF(\n    ARRAY_LENGTH(@Security_Policy) = 0,\n    TRUE,\n   json_value(json_payload.enforcedSecurityPolicy.name) IN UNNEST(@Security_Policy)\n  )\n  and \n\n  IF(\n    ARRAY_LENGTH(@Backend_name) = 0,\n    TRUE,\n    json_value(resource.labels.backend_service_name) IN UNNEST(@Backend_name)\n  )\n  and\n  IF(\n    ARRAY_LENGTH(@Region_Code) = 0,\n    TRUE,\n    JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) IN UNNEST(@Region_Code)\n  )\n\n  group by 1,4,3\n"
                  },
                  "outputFullDuration": false,
                  "unitOverride": ""
                }
              }
            ],
            "thresholds": [],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "yPos": 13,
        "xPos": 1,
        "height": 16,
        "width": 19,
        "widget": {
          "title": "GiB Delivered by Domain Name",
          "id": "",
          "timeSeriesTable": {
            "columnSettings": [],
            "dataSets": [
              {
                "tableTemplate": "",
                "timeSeriesQuery": {
                  "opsAnalyticsQuery": {
                    "queryHandle": "CgjGfxGTbO0w4BIgam9iX2h5RGtqV3ZrMHRhNUdpUEV1R3JZU1NjR01Tbi0aAlVTQLzcs9y_FA",
                    "savedQueryId": "",
                    "sql": "SELECT\n  CAST(REGEXP_EXTRACT(http_request.request_url, '^(?:https?:\\\\/\\\\/)?(?:www\\\\.)?([^:\\\\/\\\\n]+)') AS STRING) AS domainName,\n  COUNT(timestamp) AS Requests,\n  CEIL(SUM(http_request.response_size) / 1073741824 * 100) / 100 AS GiB_Sent\nFROM\n  `[projectID].global._Default._AllLogs`\nWHERE\n  resource.type = \"http_load_balancer\"\n  AND JSON_VALUE(resource.labels.backend_service_name) IS NOT NULL\n  AND JSON_VALUE(resource.labels.backend_service_name) != ''\n  AND IF(\n    ARRAY_LENGTH(@Backend_name) = 0,\n    TRUE,\n    json_value(resource.labels.backend_service_name) IN UNNEST(@Backend_name)\n  )\n  AND IF(\n    ARRAY_LENGTH(@Region_Code) = 0,\n    TRUE,\n    JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) IN UNNEST(@Region_Code)\n  )\n \nGROUP BY\n  domainName\nORDER BY\n  Requests DESC\nLIMIT\n  10;"
                  },
                  "outputFullDuration": false,
                  "unitOverride": ""
                }
              }
            ],
            "displayColumnType": false,
            "metricVisualization": "NUMBER"
          }
        }
      },
      {
        "yPos": 13,
        "xPos": 20,
        "height": 8,
        "width": 11,
        "widget": {
          "title": "Max Requests over Time Period",
          "id": "",
          "scorecard": {
            "gaugeView": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "thresholds": [
              {
                "color": "YELLOW",
                "direction": "ABOVE",
                "targetAxis": "Y1",
                "value": 500
              },
              {
                "color": "YELLOW",
                "direction": "BELOW",
                "targetAxis": "Y1",
                "value": 100
              },
              {
                "color": "RED",
                "direction": "ABOVE",
                "targetAxis": "Y1",
                "value": 10000
              }
            ],
            "timeSeriesQuery": {
              "outputFullDuration": true,
              "timeSeriesFilter": {
                "aggregation": {
                  "alignmentPeriod": "60s",
                  "crossSeriesReducer": "REDUCE_MAX",
                  "groupByFields": [],
                  "perSeriesAligner": "ALIGN_RATE"
                },
                "filter": "metric.type=\"loadbalancing.googleapis.com/https/request_count\" resource.type=\"https_lb_rule\" ${Security_Policy} ${Backend_name}"
              }
            }
          }
        }
      },
      {
        "yPos": 13,
        "xPos": 31,
        "height": 16,
        "width": 17,
        "widget": {
          "title": "Origin Traffic",
          "timeSeriesTable": {
            "columnSettings": [],
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "opsAnalyticsQuery": {
                    "queryHandle": "CgjGfxGTbO0w4BIgam9iX1dFUHRjMmx5UDFiVGQtWldyaU9xd3VYdEkxNUUaAlVTQLzcs9y_FA",
                    "sql": "SELECT\n  CAST(JSON_VALUE(resource.labels.backend_service_name) AS STRING) AS Origin_Destination,\n  COUNT(timestamp) AS Requests,\n  CEIL(SUM(http_request.response_size) / 1073741824 * 100) / 100 AS GiB_Sent\nFROM\n  `[projectID].global._Default._AllLogs`\nWHERE\n  resource.type = 'http_load_balancer'\n  AND JSON_VALUE(resource.labels.backend_service_name) IS NOT NULL\n  AND JSON_VALUE(resource.labels.backend_service_name) != ''\nGROUP BY\n  Origin_Destination\nORDER BY\n  Requests DESC\nLIMIT\n  10"
                  }
                }
              }
            ],
            "metricVisualization": "NUMBER"
          }
        }
      },
      {
        "yPos": 21,
        "xPos": 20,
        "height": 8,
        "width": 11,
        "widget": {
          "title": "Max Bytes over Time Period",
          "id": "",
          "scorecard": {
            "gaugeView": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "thresholds": [
              {
                "color": "YELLOW",
                "direction": "ABOVE",
                "targetAxis": "Y1",
                "value": 500000000
              },
              {
                "color": "RED",
                "direction": "ABOVE",
                "targetAxis": "Y1",
                "value": 1000000000000
              }
            ],
            "timeSeriesQuery": {
              "outputFullDuration": true,
              "timeSeriesFilter": {
                "aggregation": {
                  "alignmentPeriod": "60s",
                  "crossSeriesReducer": "REDUCE_MAX",
                  "groupByFields": [],
                  "perSeriesAligner": "ALIGN_RATE"
                },
                "filter": "metric.type=\"loadbalancing.googleapis.com/https/response_bytes_count\" resource.type=\"https_lb_rule\" ${Security_Policy} ${Backend_name}"
              }
            }
          }
        }
      },
      {
        "yPos": 29,
        "height": 16,
        "width": 13,
        "widget": {
          "title": "Top 10 Countries ",
          "timeSeriesTable": {
            "columnSettings": [],
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "opsAnalyticsQuery": {
                    "queryHandle": "CgjGfxGTbO0w4BIgam9iXzh4QlFES2xYOVp6aDNTTGc2UkdmQVdtdVRUbGkaAlVTQLzcs9y_FA",
                    "sql": "SELECT\n  JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) AS Client_Country,\n  COUNT(timestamp) AS Requests,\n  CEIL(SUM( http_request.response_size )/1073741824 * 100) / 100 AS GiB_Sent\n  \n\nFROM\n  `[projectID].global._Default._AllLogs`\nWHERE\n  resource.type = 'http_load_balancer'  \n  AND JSON_VALUE(resource.labels.backend_service_name) IS NOT NULL\n  AND JSON_VALUE(resource.labels.backend_service_name) != ''\n  AND IF(\n    ARRAY_LENGTH(@Backend_name) = 0,\n    TRUE,\n    json_value(resource.labels.backend_service_name) IN UNNEST(@Backend_name)\n  )\n  AND IF(\n    ARRAY_LENGTH(@Region_Code) = 0,\n    TRUE,\n    JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) IN UNNEST(@Region_Code)\n  )\n \n\nGROUP BY\n  Client_Country\n\nORDER BY Requests DESC\nLIMIT\n  10"
                  }
                }
              }
            ],
            "metricVisualization": "NUMBER"
          }
        }
      },
      {
        "yPos": 29,
        "height": 80,
        "width": 48,
        "widget": {
          "title": "2. Ingress Patterns",
          "collapsibleGroup": {
            "collapsed": false
          },
          "id": ""
        }
      },
      {
        "yPos": 29,
        "xPos": 13,
        "height": 16,
        "width": 17,
        "widget": {
          "title": "Top 10 Bytes Delivered by Country (per Hour)",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": false,
              "mode": "COLOR"
            },
            "dataSets": [
              {
                "breakdowns": [
                  {
                    "aggregationFunction": {
                      "type": "count"
                    },
                    "column": "Client_Country",
                    "limit": "10",
                    "sortOrder": "SORT_ORDER_DESCENDING"
                  }
                ],
                "dimensions": [
                  {
                    "column": "time_interval",
                    "columnType": "TIMESTAMP",
                    "sortColumn": "time_interval",
                    "sortOrder": "SORT_ORDER_ASCENDING",
                    "timeBinSize": "0s"
                  }
                ],
                "measures": [
                  {
                    "aggregationFunction": {
                      "parameters": [],
                      "type": "sum"
                    },
                    "column": "total_bytes"
                  }
                ],
                "plotType": "LINE",
                "sort": [],
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "opsAnalyticsQuery": {
                    "queryHandle": "",
                    "sql": "SELECT\n  TIMESTAMP_TRUNC(timestamp, HOUR) AS time_interval,\n  JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) AS Client_Country,\n  SUM(http_request.response_size) AS total_bytes\nFROM\n `[projectID].global._Default._AllLogs`\nWHERE\n    resource.type = 'http_load_balancer'  \n  AND JSON_VALUE(resource.labels.backend_service_name) IS NOT NULL\n  AND JSON_VALUE(resource.labels.backend_service_name) != ''\n  AND IF(\n    ARRAY_LENGTH(@Backend_name) = 0,\n    TRUE,\n    json_value(resource.labels.backend_service_name) IN UNNEST(@Backend_name)\n  )\n  AND IF(\n    ARRAY_LENGTH(@Region_Code) = 0,\n    TRUE,\n    JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) IN UNNEST(@Region_Code)\n  )\nGROUP BY\n  time_interval,\n  Client_Country\nORDER BY\n  time_interval,\n  Client_Country"
                  }
                }
              }
            ],
            "thresholds": [],
            "yAxis": {
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "yPos": 29,
        "xPos": 30,
        "height": 16,
        "width": 17,
        "widget": {
          "title": "Requests Status",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": false,
              "mode": "COLOR"
            },
            "dataSets": [
              {
                "breakdowns": [],
                "dimensions": [
                  {
                    "column": "time_interval",
                    "columnType": "TIMESTAMP",
                    "sortColumn": "time_interval",
                    "sortOrder": "SORT_ORDER_ASCENDING",
                    "timeBinSize": "0s"
                  }
                ],
                "measures": [
                  {
                    "aggregationFunction": {
                      "parameters": [],
                      "type": "sum"
                    },
                    "column": "success_2xx"
                  },
                  {
                    "aggregationFunction": {
                      "parameters": [],
                      "type": "sum"
                    },
                    "column": "redirect_3xx"
                  }
                ],
                "plotType": "LINE",
                "sort": [],
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "opsAnalyticsQuery": {
                    "queryHandle": "",
                    "sql": "SELECT\n  TIMESTAMP_TRUNC(timestamp, HOUR) AS time_interval,\n  COUNTIF(http_request.status = 0) AS unknown,\n  COUNTIF((http_request.status >= 200) AND (http_request.status < 300)) AS success_2xx,\n  COUNTIF((http_request.status >= 300) AND (http_request.status < 400)) AS redirect_3xx,\n  COUNTIF((http_request.status >= 400) AND (http_request.status < 500)) AS client_error_4xx,\n  COUNTIF((http_request.status >= 500) AND (http_request.status < 600)) AS server_error_5xx,\n  COUNT(timestamp) AS Requests\nFROM\n  `[projectID].global._Default._AllLogs`\nWHERE\n  resource.type = \"http_load_balancer\"\n  AND JSON_VALUE(resource.labels.backend_service_name) IS NOT NULL\n  AND JSON_VALUE(resource.labels.backend_service_name) != ''\n  AND http_request.request_url IS NOT NULL\n  AND IF(\n    ARRAY_LENGTH(@Backend_name) = 0,\n    TRUE,\n    json_value(resource.labels.backend_service_name) IN UNNEST(@Backend_name)\n  )\n  AND IF(\n    ARRAY_LENGTH(@Region_Code) = 0,\n    TRUE,\n    JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) IN UNNEST(@Region_Code)\n  )\nGROUP BY\n  time_interval\nORDER BY\n  time_interval"
                  }
                }
              }
            ],
            "thresholds": [],
            "yAxis": {
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "yPos": 45,
        "xPos": 13,
        "height": 16,
        "width": 17,
        "widget": {
          "title": "Traffic by Country by Hour",
          "id": "",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": false,
              "mode": "COLOR"
            },
            "dataSets": [
              {
                "minAlignmentPeriod": "3600s",
                "plotType": "STACKED_AREA",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "timeSeriesFilter": {
                    "aggregation": {
                      "alignmentPeriod": "3600s",
                      "crossSeriesReducer": "REDUCE_SUM",
                      "groupByFields": [
                        "metric.label.\"client_country\""
                      ],
                      "perSeriesAligner": "ALIGN_SUM"
                    },
                    "filter": "metric.type=\"loadbalancing.googleapis.com/https/response_bytes_count\" resource.type=\"https_lb_rule\" ${Backend_name}"
                  }
                }
              }
            ],
            "thresholds": [],
            "yAxis": {
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "yPos": 45,
        "xPos": 30,
        "height": 16,
        "width": 17,
        "widget": {
          "title": "Status Codes",
          "id": "",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": false,
              "mode": "COLOR"
            },
            "dataSets": [
              {
                "minAlignmentPeriod": "60s",
                "plotType": "STACKED_AREA",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "timeSeriesFilter": {
                    "aggregation": {
                      "alignmentPeriod": "60s",
                      "crossSeriesReducer": "REDUCE_SUM",
                      "groupByFields": [
                        "metric.label.\"response_code_class\""
                      ],
                      "perSeriesAligner": "ALIGN_RATE"
                    },
                    "filter": "metric.type=\"loadbalancing.googleapis.com/https/request_count\" resource.type=\"https_lb_rule\" ${Backend_name}"
                  }
                }
              }
            ],
            "thresholds": [],
            "yAxis": {
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "yPos": 61,
        "height": 14,
        "width": 47,
        "widget": {
          "title": "Top Client IPs by Request Volume",
          "timeSeriesTable": {
            "columnSettings": [],
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "opsAnalyticsQuery": {
                    "queryHandle": "CgjGfxGTbO0w4BIgam9iX0VscGNGdGZIQXdiSlJjbHZYMTBtNHljR0hwODIaAlVTQLzcs9y_FA",
                    "sql": "SELECT\n  http_request.remote_ip AS Connection_IP,\n  COUNT(timestamp) AS Requests,\n  JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) AS Client_Country,\n  CEIL(SUM(http_request.response_size) / 1073741824 * 100) / 100 AS GiB_Sent,\n  JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.asn) AS ASN,\n  JSON_VALUE(json_payload.securityPolicyRequestData.tlsJa3Fingerprint) AS Ja3Fingerprint,\n  JSON_VALUE(json_payload.securityPolicyRequestData.tlsJa4Fingerprint) AS Ja4Fingerprint\nFROM\n  `[projectID].global._Default._AllLogs`\nWHERE\n  resource.type = 'http_load_balancer'\n  AND http_request.remote_ip IS NOT NULL\n  AND JSON_VALUE(resource.labels.backend_service_name) IS NOT NULL\n  AND JSON_VALUE(resource.labels.backend_service_name) != ''\n  AND IF(\n    ARRAY_LENGTH(@Security_Policy) = 0,\n    TRUE,\n    json_value(json_payload.enforcedSecurityPolicy.name) IN UNNEST(@Security_Policy)\n  )\n  AND IF(\n    ARRAY_LENGTH(@Backend_name) = 0,\n    TRUE,\n    json_value(resource.labels.backend_service_name) IN UNNEST(@Backend_name)\n  )\n  AND IF(\n    ARRAY_LENGTH(@Region_Code) = 0,\n    TRUE,\n    JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) IN UNNEST(@Region_Code)\n  )\nGROUP BY\n  Connection_IP,\n  ASN,\n  Client_Country,\n  Ja3Fingerprint,\n  Ja4Fingerprint\nORDER BY\n  Requests DESC\nLIMIT 50;"
                  }
                }
              }
            ],
            "metricVisualization": "NUMBER"
          }
        }
      },
      {
        "yPos": 75,
        "height": 10,
        "width": 47,
        "widget": {
          "title": "Top URLs",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": true,
              "mode": "COLOR"
            },
            "dataSets": [
              {
                "breakdowns": [],
                "dimensions": [
                  {
                    "column": "request_url",
                    "columnType": "STRING",
                    "maxBinCount": 5,
                    "sortColumn": "request_url",
                    "sortOrder": "SORT_ORDER_ASCENDING"
                  }
                ],
                "measures": [
                  {
                    "aggregationFunction": {
                      "parameters": [],
                      "type": "count"
                    },
                    "column": "Requests"
                  }
                ],
                "plotType": "STACKED_BAR",
                "sort": [],
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "opsAnalyticsQuery": {
                    "queryHandle": "",
                    "sql": "SELECT\n  count(timestamp) as Requests, \n\n  http_request.request_url, \n\nFROM\n  `[projectID].global._Default._AllLogs`\nWHERE\n  resource.type = 'http_load_balancer' \n  AND http_request.request_url IS NOT NULL\n  AND JSON_VALUE(resource.labels.backend_service_name) IS NOT NULL\n  AND JSON_VALUE(resource.labels.backend_service_name) != ''\n  and\n  IF(\n    ARRAY_LENGTH(@Security_Policy) = 0,\n    TRUE,\n   json_value(json_payload.enforcedSecurityPolicy.name) IN UNNEST(@Security_Policy)\n  )\n  and \n\n  IF(\n    ARRAY_LENGTH(@Backend_name) = 0,\n    TRUE,\n    json_value(resource.labels.backend_service_name) IN UNNEST(@Backend_name)\n  )\nand\n  IF(\n    ARRAY_LENGTH(@Region_Code) = 0,\n    TRUE,\n    JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) IN UNNEST(@Region_Code)\n  )\n\nGROUP BY\n  2,\n  timestamp\nORDER BY\n  timestamp DESC\n  --LIMIT 100"
                  }
                }
              }
            ],
            "thresholds": [],
            "yAxis": {
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "yPos": 85,
        "height": 10,
        "width": 33,
        "widget": {
          "title": "Top Referer",
          "id": "",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": true,
              "mode": "COLOR",
              "showLegend": false
            },
            "dataSets": [
              {
                "breakdowns": [],
                "dimensions": [
                  {
                    "column": "referer",
                    "columnType": "STRING",
                    "maxBinCount": 5,
                    "sortColumn": "referer",
                    "sortOrder": "SORT_ORDER_ASCENDING",
                    "xMax": 0,
                    "xMin": 0
                  }
                ],
                "legendTemplate": "",
                "measures": [
                  {
                    "aggregationFunction": {
                      "parameters": [],
                      "type": "count"
                    },
                    "column": "requests"
                  }
                ],
                "plotType": "STACKED_BAR",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "opsAnalyticsQuery": {
                    "queryHandle": "",
                    "savedQueryId": "",
                    "sql": "SELECT\n  count(timestamp) as requests, \n  \n  http_request.referer,\n \nFROM\n  `[projectID].global._Default._AllLogs`\nWHERE\n  resource.type = 'http_load_balancer' \n  AND JSON_VALUE(resource.labels.backend_service_name) IS NOT NULL\n  AND JSON_VALUE(resource.labels.backend_service_name) != ''\n  and\n  IF(\n    ARRAY_LENGTH(@Security_Policy) = 0,\n    TRUE,\n   json_value(json_payload.enforcedSecurityPolicy.name) IN UNNEST(@Security_Policy)\n  )\n  and \n\n  IF(\n    ARRAY_LENGTH(@Backend_name) = 0,\n    TRUE,\n    json_value(resource.labels.backend_service_name) IN UNNEST(@Backend_name)\n  )\nand\n  IF(\n    ARRAY_LENGTH(@Region_Code) = 0,\n    TRUE,\n    JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) IN UNNEST(@Region_Code)\n  )\n\nGROUP BY\n  2,\n  timestamp\nORDER BY\n  timestamp DESC\n  --LIMIT 100"
                  },
                  "outputFullDuration": false,
                  "unitOverride": ""
                }
              }
            ],
            "thresholds": [],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "yPos": 85,
        "xPos": 33,
        "height": 10,
        "width": 14,
        "widget": {
          "title": "Method",
          "id": "",
          "pieChart": {
            "chartType": "DONUT",
            "dataSets": [
              {
                "breakdowns": [],
                "dimensions": [
                  {
                    "column": "request_method",
                    "columnType": "STRING",
                    "maxBinCount": 5,
                    "sortColumn": "request_method",
                    "sortOrder": "SORT_ORDER_ASCENDING",
                    "xMax": 0,
                    "xMin": 0
                  }
                ],
                "measures": [
                  {
                    "aggregationFunction": {
                      "parameters": [],
                      "type": "count"
                    },
                    "column": "requests"
                  }
                ],
                "sliceNameTemplate": "",
                "timeSeriesQuery": {
                  "opsAnalyticsQuery": {
                    "queryHandle": "",
                    "savedQueryId": "",
                    "sql": "SELECT\n  count(timestamp) as requests, \n  http_request.request_method, \n \nFROM\n  `[projectID].global._Default._AllLogs`\nWHERE\n  resource.type = 'http_load_balancer' \n  AND JSON_VALUE(resource.labels.backend_service_name) IS NOT NULL\n  AND JSON_VALUE(resource.labels.backend_service_name) != ''\n  and\n  IF(\n    ARRAY_LENGTH(@Security_Policy) = 0,\n    TRUE,\n   json_value(json_payload.enforcedSecurityPolicy.name) IN UNNEST(@Security_Policy)\n  )\n  and \n\n  IF(\n    ARRAY_LENGTH(@Backend_name) = 0,\n    TRUE,\n    json_value(resource.labels.backend_service_name) IN UNNEST(@Backend_name)\n  )\nand\n  IF(\n    ARRAY_LENGTH(@Region_Code) = 0,\n    TRUE,\n    JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) IN UNNEST(@Region_Code)\n  )\n\nGROUP BY\n  2,\n  timestamp\nORDER BY\n  timestamp DESC\n  --LIMIT 100"
                  },
                  "outputFullDuration": false,
                  "unitOverride": ""
                }
              }
            ],
            "showLabels": false,
            "showTotal": false,
            "sliceAggregatedThreshold": 0
          }
        }
      },
      {
        "yPos": 95,
        "height": 14,
        "width": 47,
        "widget": {
          "title": "Top User Agents",
          "id": "",
          "timeSeriesTable": {
            "columnSettings": [],
            "dataSets": [
              {
                "tableTemplate": "",
                "timeSeriesQuery": {
                  "opsAnalyticsQuery": {
                    "queryHandle": "CgjGfxGTbO0w4BIgam9iX1N0LXhBQnVRZ21TVmxzbDhkZVV2RE1Bd2R0dngaAlVTQLzcs9y_FA",
                    "savedQueryId": "",
                    "sql": "SELECT\n  http_request.user_agent AS User_Agent,\n  COUNT(timestamp) AS Requests,\n\n  CEIL(SUM(http_request.response_size) / 1073741824 * 100) / 100 AS GiB_Sent,\n\nFROM\n  `[projectID].global._Default._AllLogs`\nWHERE\n  resource.type = 'http_load_balancer'\n  AND JSON_VALUE(resource.labels.backend_service_name) IS NOT NULL\n  AND JSON_VALUE(resource.labels.backend_service_name) != ''\n  AND IF(\n    ARRAY_LENGTH(@Security_Policy) = 0,\n    TRUE,\n    json_value(json_payload.enforcedSecurityPolicy.name) IN UNNEST(@Security_Policy)\n  )\n  AND IF(\n    ARRAY_LENGTH(@Backend_name) = 0,\n    TRUE,\n    json_value(resource.labels.backend_service_name) IN UNNEST(@Backend_name)\n  )\n  AND IF(\n    ARRAY_LENGTH(@Region_Code) = 0,\n    TRUE,\n    JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) IN UNNEST(@Region_Code)\n  )\nGROUP BY\n  User_Agent\n  \nORDER BY\n  Requests DESC\nLIMIT 50;"
                  },
                  "outputFullDuration": false,
                  "unitOverride": ""
                }
              }
            ],
            "displayColumnType": false,
            "metricVisualization": "NUMBER"
          }
        }
      },
      {
        "yPos": 109,
        "height": 15,
        "width": 24,
        "widget": {
          "title": "Allowed Requests per Policy",
          "id": "",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": false,
              "mode": "COLOR"
            },
            "dataSets": [
              {
                "legendTemplate": "ALLOW - ${resource.labels.policy_name}",
                "minAlignmentPeriod": "60s",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "timeSeriesFilter": {
                    "aggregation": {
                      "alignmentPeriod": "60s",
                      "crossSeriesReducer": "REDUCE_SUM",
                      "groupByFields": [
                        "resource.label.\"policy_name\""
                      ],
                      "perSeriesAligner": "ALIGN_RATE"
                    },
                    "filter": "metric.type=\"networksecurity.googleapis.com/https/request_count\" resource.type=\"network_security_policy\" metric.label.\"blocked\"=\"false\" ${Security_Policy}"
                  }
                }
              }
            ],
            "thresholds": [],
            "timeshiftDuration": "604800s",
            "yAxis": {
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "yPos": 109,
        "height": 120,
        "width": 48,
        "widget": {
          "title": "3. Cloud Armor Policies",
          "collapsibleGroup": {
            "collapsed": false
          },
          "id": ""
        }
      },
      {
        "yPos": 109,
        "xPos": 24,
        "height": 15,
        "width": 24,
        "widget": {
          "title": "Blocked Requests per Policy",
          "id": "",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": false,
              "mode": "COLOR"
            },
            "dataSets": [
              {
                "legendTemplate": "DENY - ${resource.labels.policy_name}",
                "minAlignmentPeriod": "60s",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "timeSeriesFilter": {
                    "aggregation": {
                      "alignmentPeriod": "60s",
                      "crossSeriesReducer": "REDUCE_SUM",
                      "groupByFields": [
                        "resource.label.\"policy_name\""
                      ],
                      "perSeriesAligner": "ALIGN_RATE"
                    },
                    "filter": "metric.type=\"networksecurity.googleapis.com/https/request_count\" resource.type=\"network_security_policy\" metric.label.\"blocked\"=\"true\" ${Security_Policy}"
                  }
                }
              },
              {
                "legendTemplate": "PREVIEW DENY - ${resource.labels.policy_name}",
                "minAlignmentPeriod": "60s",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "timeSeriesFilter": {
                    "aggregation": {
                      "alignmentPeriod": "60s",
                      "crossSeriesReducer": "REDUCE_SUM",
                      "groupByFields": [
                        "resource.label.\"policy_name\""
                      ],
                      "perSeriesAligner": "ALIGN_RATE"
                    },
                    "filter": "metric.type=\"networksecurity.googleapis.com/https/previewed_request_count\" resource.type=\"network_security_policy\" metric.label.\"blocked\"=\"true\" ${Security_Policy}"
                  }
                }
              }
            ],
            "thresholds": [],
            "timeshiftDuration": "604800s",
            "yAxis": {
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "yPos": 124,
        "height": 13,
        "width": 27,
        "widget": {
          "title": "WAF Pre-configured Rule Hits ",
          "id": "",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": false,
              "mode": "COLOR",
              "showLegend": false
            },
            "dataSets": [
              {
                "breakdowns": [
                  {
                    "aggregationFunction": {
                      "parameters": [],
                      "type": "count"
                    },
                    "column": "preconfiguredExprIds",
                    "limit": 5,
                    "sortOrder": "SORT_ORDER_DESCENDING"
                  }
                ],
                "dimensions": [
                  {
                    "column": "timestamp",
                    "columnType": "TIMESTAMP",
                    "maxBinCount": 0,
                    "sortColumn": "timestamp",
                    "sortOrder": "SORT_ORDER_ASCENDING",
                    "timeBinSize": "0s",
                    "xMax": 0,
                    "xMin": 0
                  }
                ],
                "legendTemplate": "",
                "measures": [
                  {
                    "aggregationFunction": {
                      "parameters": [],
                      "type": "count"
                    },
                    "column": "Requests"
                  }
                ],
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "opsAnalyticsQuery": {
                    "queryHandle": "",
                    "savedQueryId": "",
                    "sql": "SELECT\n  count(timestamp) as Requests, \n  timestamp,\n  json_value(json_payload.enforcedSecurityPolicy.name) as Security_Policy,\n  json_value(json_payload.enforcedSecurityPolicy.priority) as Rule_Priority,\n  json_value(json_payload.enforcedSecurityPolicy.preconfiguredExprIds.0) as preconfiguredExprIds,\n\n  \nFROM\n  `[projectID].global._Default._AllLogs`\n  where resource.type = 'http_load_balancer'\n  and json_value(json_payload.enforcedSecurityPolicy.preconfiguredExprIds.0) is not null\n  and\n  IF(\n    ARRAY_LENGTH(@Security_Policy) = 0,\n    TRUE,\n   json_value(json_payload.enforcedSecurityPolicy.name) IN UNNEST(@Security_Policy)\n  )\n  and \n\n  IF(\n    ARRAY_LENGTH(@Backend_name) = 0,\n    TRUE,\n    json_value(resource.labels.backend_service_name) IN UNNEST(@Backend_name)\n  )\n  and\n  \n\n  IF(\n    ARRAY_LENGTH(@Region_Code) = 0,\n    TRUE,\n    json_value(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) IN UNNEST(@Region_Code)\n  )\ngroup by 5,3,4, timestamp\norder by timestamp desc\n--LIMIT 100"
                  },
                  "outputFullDuration": false,
                  "unitOverride": ""
                }
              }
            ],
            "thresholds": [],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "yPos": 124,
        "xPos": 27,
        "height": 13,
        "width": 20,
        "widget": {
          "title": "WAF Pre-configured Rule Hits ",
          "id": "",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": true,
              "mode": "COLOR",
              "showLegend": false
            },
            "dataSets": [
              {
                "breakdowns": [
                  {
                    "aggregationFunction": {
                      "parameters": [],
                      "type": "count"
                    },
                    "column": "Security_Policy",
                    "limit": 5,
                    "sortOrder": "SORT_ORDER_DESCENDING"
                  }
                ],
                "dimensions": [
                  {
                    "column": "preconfiguredExprIds",
                    "columnType": "STRING",
                    "maxBinCount": 5,
                    "sortColumn": "preconfiguredExprIds",
                    "sortOrder": "SORT_ORDER_ASCENDING",
                    "xMax": 0,
                    "xMin": 0
                  }
                ],
                "legendTemplate": "",
                "measures": [
                  {
                    "aggregationFunction": {
                      "parameters": [],
                      "type": "count"
                    },
                    "column": "Requests"
                  }
                ],
                "plotType": "STACKED_BAR",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "opsAnalyticsQuery": {
                    "queryHandle": "",
                    "savedQueryId": "",
                    "sql": "SELECT\n  count(timestamp) as Requests, \n\n  json_value(json_payload.enforcedSecurityPolicy.name) as Security_Policy,\n  json_value(json_payload.enforcedSecurityPolicy.priority) as Rule_Priority,\n  json_value(json_payload.enforcedSecurityPolicy.preconfiguredExprIds.0) as preconfiguredExprIds,\n\n  \nFROM\n  `[projectID].global._Default._AllLogs`\n  where resource.type = 'http_load_balancer'\n  and json_value(json_payload.enforcedSecurityPolicy.preconfiguredExprIds.0) is not null\n  AND JSON_VALUE(resource.labels.backend_service_name) IS NOT NULL\n  AND JSON_VALUE(resource.labels.backend_service_name) != ''\n  and\n  IF(\n    ARRAY_LENGTH(@Security_Policy) = 0,\n    TRUE,\n   json_value(json_payload.enforcedSecurityPolicy.name) IN UNNEST(@Security_Policy)\n  )\n  and \n\n  IF(\n    ARRAY_LENGTH(@Backend_name) = 0,\n    TRUE,\n    json_value(resource.labels.backend_service_name) IN UNNEST(@Backend_name)\n  )\n  and\n  \n\n  IF(\n    ARRAY_LENGTH(@Region_Code) = 0,\n    TRUE,\n    json_value(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) IN UNNEST(@Region_Code)\n  )\ngroup by 2,3,4, timestamp\norder by timestamp desc\n--LIMIT 100"
                  },
                  "outputFullDuration": false,
                  "unitOverride": ""
                }
              }
            ],
            "thresholds": [],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "yPos": 137,
        "height": 19,
        "width": 48,
        "widget": {
          "title": "Top Rules Hits (by rule priority)",
          "id": "",
          "xyChart": {
            "chartOptions": {
              "displayHorizontal": true,
              "mode": "COLOR",
              "showLegend": false
            },
            "dataSets": [
              {
                "breakdowns": [
                  {
                    "aggregationFunction": {
                      "parameters": [],
                      "type": "count"
                    },
                    "column": "Security_Policy",
                    "limit": 10,
                    "sortOrder": "SORT_ORDER_DESCENDING"
                  }
                ],
                "dimensions": [
                  {
                    "column": "Rule_Priority",
                    "columnType": "STRING",
                    "maxBinCount": 10,
                    "sortColumn": "Rule_Priority",
                    "sortOrder": "SORT_ORDER_ASCENDING",
                    "xMax": 0,
                    "xMin": 0
                  }
                ],
                "legendTemplate": "",
                "measures": [
                  {
                    "aggregationFunction": {
                      "parameters": [],
                      "type": "count"
                    },
                    "column": "Requests"
                  }
                ],
                "plotType": "STACKED_BAR",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "opsAnalyticsQuery": {
                    "queryHandle": "",
                    "savedQueryId": "",
                    "sql": "SELECT\n  count(timestamp) as Requests, \n  json_value(json_payload.enforcedSecurityPolicy.name) as Security_Policy,\n  json_value(json_payload.enforcedSecurityPolicy.priority) as Rule_Priority,\n  json_value(json_payload.enforcedSecurityPolicy.configuredAction) as Rule_Action,\n  --json_payload.previewSecurityPolicy\n  \n\nFROM\n  `[projectID].global._Default._AllLogs`\nWHERE\n  resource.type = 'http_load_balancer' \n  AND JSON_VALUE(resource.labels.backend_service_name) IS NOT NULL\n  AND JSON_VALUE(resource.labels.backend_service_name) != ''\n  and\n  IF(\n    ARRAY_LENGTH(@Security_Policy) = 0,\n    TRUE,\n   json_value(json_payload.enforcedSecurityPolicy.name) IN UNNEST(@Security_Policy)\n  )\n  and \n\n  IF(\n    ARRAY_LENGTH(@Backend_name) = 0,\n    TRUE,\n    json_value(resource.labels.backend_service_name) IN UNNEST(@Backend_name)\n  )\nand\n  IF(\n    ARRAY_LENGTH(@Region_Code) = 0,\n    TRUE,\n    JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) IN UNNEST(@Region_Code)\n  )\n\nGROUP BY\n  2,3,4, timestamp\nORDER BY\n  timestamp DESC\n  --LIMIT 100"
                  },
                  "outputFullDuration": false,
                  "unitOverride": ""
                }
              }
            ],
            "thresholds": [],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            }
          }
        }
      },
      {
        "yPos": 156,
        "height": 27,
        "width": 48,
        "widget": {
          "title": "Last 100 requests through Cloud Armor",
          "id": "",
          "timeSeriesTable": {
            "columnSettings": [],
            "dataSets": [
              {
                "tableTemplate": "",
                "timeSeriesQuery": {
                  "opsAnalyticsQuery": {
                    "queryHandle": "CgjGfxGTbO0w4BIgam9iXzZfd1U3QTJzYWVMUlZ3MUw2WFJGU0YtU3dYbGIaAlVTQLzcs9y_FA",
                    "savedQueryId": "",
                    "sql": "SELECT\n  timestamp,\n  http_request.request_url,\n  http_request.request_method,\n  http_request.status,\n  --http_request.request_size,\n  --http_request.response_size,\n  http_request.user_agent,\n  http_request.remote_ip AS Connecting_IP,\n  JSON_VALUE(json_payload.remoteIp) AS Evaluated_IP,\n  -- http_request.server_ip,\n  http_request.referer,\n  JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) AS regionCode,\n  JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.asn) AS asn,\n  JSON_VALUE(json_payload.securityPolicyRequestData.tlsJa3Fingerprint) AS Ja3Fingerprint,\n  JSON_VALUE(json_payload.securityPolicyRequestData.tlsJa4Fingerprint) AS Ja4Fingerprint,\n  JSON_VALUE(json_payload.enforcedSecurityPolicy.threatIntelligence.categories.0) AS Network_Threat_Intel,\n  JSON_VALUE(json_payload.enforcedSecurityPolicy.matchedFieldLength) AS fieldLength,\n  JSON_VALUE(json_payload.enforcedSecurityPolicy.matchedFieldType) AS fieldType,\n  JSON_VALUE(json_payload.enforcedSecurityPolicy.matchedFieldValue) AS fieldValue,\n  JSON_VALUE(json_payload.enforcedSecurityPolicy.name) AS Security_Policy,\n  JSON_VALUE(json_payload.enforcedSecurityPolicy.priority) AS Rule_Priority,\n  JSON_VALUE(json_payload.enforcedSecurityPolicy.configuredAction) AS Rule_Action,\n  JSON_VALUE(json_payload.enforcedSecurityPolicy.preconfiguredExprIds.0) AS preconfiguredExprIds,\n  JSON_VALUE(json_payload.previewSecurityPolicy.name) AS Preview_Security_Policy,\n  JSON_VALUE(json_payload.previewSecurityPolicy.priority) AS Preview_Rule_Priority,\n  JSON_VALUE(json_payload.previewSecurityPolicy.configuredAction) AS Preview_Rule_Action,\n  REGEXP_EXTRACT(trace, r'.*/(.*)') AS Trace_Id\n  --json_payload.previewSecurityPolicy\nFROM\n  `[projectID].global._Default._AllLogs`\nWHERE\n  resource.type = 'http_load_balancer' --and severity = 'WARNING'\n  AND (json_payload.enforcedSecurityPolicy.name IS NOT NULL\n    OR json_payload.previewSecurityPolicy.name IS NOT NULL)\n  AND JSON_VALUE(resource.labels.backend_service_name) IS NOT NULL\n  AND JSON_VALUE(resource.labels.backend_service_name) != ''\n  AND\nIF\n  ( ARRAY_LENGTH(@Security_Policy) = 0, TRUE, JSON_VALUE(json_payload.enforcedSecurityPolicy.name) IN UNNEST(@Security_Policy) )\n  AND\nIF\n  ( ARRAY_LENGTH(@Backend_name) = 0, TRUE, JSON_VALUE(resource.labels.backend_service_name) IN UNNEST(@Backend_name) )\n  AND\nIF\n  ( ARRAY_LENGTH(@Region_Code) = 0, TRUE, JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) IN UNNEST(@Region_Code) )\nORDER BY\n  timestamp DESC\nLIMIT\n  1000"
                  },
                  "outputFullDuration": false,
                  "unitOverride": ""
                }
              }
            ],
            "displayColumnType": false,
            "metricVisualization": "NUMBER"
          }
        }
      },
      {
        "yPos": 183,
        "height": 16,
        "width": 48,
        "widget": {
          "title": "Top 100 Requests - Performance",
          "id": "",
          "timeSeriesTable": {
            "columnSettings": [],
            "dataSets": [
              {
                "tableTemplate": "",
                "timeSeriesQuery": {
                  "opsAnalyticsQuery": {
                    "queryHandle": "ChDGfxGTbO0w4Fs_jkaxU1uWEiBqb2JfTFlRV2VjTTZPb2k5ZjAzajlzTXpSQXBXWUxhQRoCVVNAvNyz3L8U",
                    "savedQueryId": "",
                    "sql": "WITH\n  scope_query AS (\n  SELECT\n    *\n  FROM\n    `[projectID].global._Default._Default` )\nSELECT\n  http_request.request_url,\n  COUNT(1) AS total_requests,\n  COUNTIF((JSON_VALUE(json_payload.statusDetails) = \"response_from_cache\") OR (JSON_VALUE(json_payload.statusDetails) = \"byte_range_caching\") OR JSON_VALUE(json_payload.statusDetails) = \"response_from_cache_validated\") AS from_cache,\n  COUNTIF(JSON_VALUE(json_payload.statusDetails) = \"response_sent_by_backend\") AS from_backend,\n  COUNTIF((http_request.status >= 200) AND (http_request.status < 400)) AS success_2xx,\n  COUNTIF((http_request.status >= 400) AND (http_request.status < 500)) AS nonsuccess_4xx,\n  COUNTIF((http_request.status >= 500) AND (http_request.status < 600)) AS nonsuccess_5xx\nFROM\n  `[projectID].global._Default._AllLogs`\nWHERE\n  resource.type = \"http_load_balancer\"\n  AND JSON_VALUE(resource.labels.backend_service_name) IS NOT NULL\n  AND JSON_VALUE(resource.labels.backend_service_name) != ''\n  AND \n  http_request.request_url IS NOT NULL\n  AND IF(\n    ARRAY_LENGTH(@Backend_name) = 0,\n    TRUE,\n    json_value(resource.labels.backend_service_name) IN UNNEST(@Backend_name)\n  )\n  AND IF(\n    ARRAY_LENGTH(@Region_Code) = 0,\n    TRUE,\n    JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) IN UNNEST(@Region_Code)\n  )\nGROUP BY\n  http_request.request_url\nORDER BY\n  total_requests DESC \nLIMIT 100;"
                  },
                  "outputFullDuration": false,
                  "unitOverride": ""
                }
              }
            ],
            "displayColumnType": false,
            "metricVisualization": "NUMBER"
          }
        }
      },
      {
        "yPos": 199,
        "height": 15,
        "width": 48,
        "widget": {
          "title": "Top 4xx Errors",
          "id": "",
          "timeSeriesTable": {
            "columnSettings": [],
            "dataSets": [
              {
                "tableTemplate": "",
                "timeSeriesQuery": {
                  "opsAnalyticsQuery": {
                    "queryHandle": "CgjGfxGTbO0w4BIgam9iX0VsT2V6SWc3dTI2SUNZN1Fkc1o2ZkZBejBFRm0aAlVTQLzcs9y_FA",
                    "savedQueryId": "",
                    "sql": "SELECT\n  http_request.request_url AS URL,\n  http_request.status AS Status_Code,\n  COUNT(timestamp) AS Requests,\n  CEIL(SUM( http_request.response_size )/1073741824 * 100) / 100 AS GiB_Sent\nFROM\n  `[projectID].global._Default._AllLogs`\nWHERE\n  resource.type = 'http_load_balancer' \n  AND http_request.status IN (400, 401, 402, 403, 404, 405, 407)\n  AND http_request.request_url IS NOT NULL\n  AND JSON_VALUE(resource.labels.backend_service_name) IS NOT NULL\n  AND JSON_VALUE(resource.labels.backend_service_name) != ''\n  AND IF(\n    ARRAY_LENGTH(@Backend_name) = 0,\n    TRUE,\n    json_value(resource.labels.backend_service_name) IN UNNEST(@Backend_name)\n  )\n  AND IF(\n    ARRAY_LENGTH(@Region_Code) = 0,\n    TRUE,\n    JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) IN UNNEST(@Region_Code)\n  )\nGROUP BY\n  URL,\n  Status_Code\nORDER BY\n  URL ASC,\n  Requests DESC,\n  GiB_Sent DESC\n  \nLIMIT 100"
                  },
                  "outputFullDuration": false,
                  "unitOverride": ""
                }
              }
            ],
            "displayColumnType": false,
            "metricVisualization": "NUMBER"
          }
        }
      },
      {
        "yPos": 214,
        "height": 15,
        "width": 48,
        "widget": {
          "title": "Top 5xx Errors",
          "id": "",
          "timeSeriesTable": {
            "columnSettings": [],
            "dataSets": [
              {
                "tableTemplate": "",
                "timeSeriesQuery": {
                  "opsAnalyticsQuery": {
                    "queryHandle": "CgjGfxGTbO0w4BIgam9iX2VTb3NXS3VzdXdLdDdteVpEYjg2dFY1OFFOSUQaAlVTQLzcs9y_FA",
                    "savedQueryId": "",
                    "sql": "SELECT\n  http_request.request_url AS URL,\n  http_request.status AS Status_Code,\n  COUNT(timestamp) AS Requests,\n  CEIL(SUM( http_request.response_size )/1073741824 * 100) / 100 AS GiB_Sent\nFROM\n  `[projectID].global._Default._AllLogs`\nWHERE\n  resource.type = 'http_load_balancer' \n  AND http_request.status IN (500, 501, 502, 503, 504, 509, 511)\n  \n  AND http_request.request_url IS NOT NULL\n  AND JSON_VALUE(resource.labels.backend_service_name) IS NOT NULL\n  AND JSON_VALUE(resource.labels.backend_service_name) != ''\n  AND IF(\n    ARRAY_LENGTH(@Backend_name) = 0,\n    TRUE,\n    json_value(resource.labels.backend_service_name) IN UNNEST(@Backend_name)\n  )\n  AND IF(\n    ARRAY_LENGTH(@Region_Code) = 0,\n    TRUE,\n    JSON_VALUE(json_payload.securityPolicyRequestData.remoteIpInfo.regionCode) IN UNNEST(@Region_Code)\n  )\nGROUP BY\n  URL,\n  Status_Code\nORDER BY\n  URL ASC,\n  Requests DESC,\n  GiB_Sent DESC\n  \nLIMIT 100"
                  },
                  "outputFullDuration": false,
                  "unitOverride": ""
                }
              }
            ],
            "displayColumnType": false,
            "metricVisualization": "NUMBER"
          }
        }
      }
    ]
  }
}